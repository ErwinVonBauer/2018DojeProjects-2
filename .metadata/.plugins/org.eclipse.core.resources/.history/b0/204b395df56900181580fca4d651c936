package com.groupware.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.groupware.dao.DraftDao;
import com.groupware.dao.LineDao;
import com.groupware.dao.UserDao;
import com.groupware.vo.LineVo;
import com.groupware.vo.UserVo;

@Service
public class LineService {
	@Autowired LineDao linedao;
	@Autowired DraftDao draftdao;
	@Autowired UserDao userdao;
	@Autowired CommonService commonservice;
	
	//1.결재라인 미리보기
	public String loadlinepreview(HttpServletRequest req) {
		String originalpk = req.getParameter("ai");
		int apl_ai = Integer.parseInt(originalpk);
		String content = linedao.selectLineContentbyPK(apl_ai);
		return content;
	}
	
	
	public List<UserVo> linesearch(HttpServletRequest req) {
		String[] reqarray = req.getParameterValues("searchinfos");
		String[] searchinfos = reqarray[0].split(",");
		String searchoption = searchinfos[0];
		String keyword = searchinfos[1];
		
		List<UserVo> uservos = new ArrayList<UserVo>();
		
		//리팩토링 필요,임시메소드
		if(searchoption.equals("emp")) {
			@SuppressWarnings("rawtypes")
			List<HashMap> userlist = linedao.selectEmp(keyword);
			if(userlist.size()!=0) {
			for(int i=0;i<userlist.size();i++) {
				UserVo vo = new UserVo(); // arrayList든 Vector든 아이템을 추가하려면 다른 레퍼런스(주소)를 가지는 새로운 객체를 넣어주어야함. 그래서 new 연산자를 사용해야한다
				vo.setUser_ai((int)userlist.get(i).get("user_ai"));
				vo.setDep_ai((int)userlist.get(i).get("dep_ai"));
				vo.setRank_ai((int)userlist.get(i).get("rank_ai"));
				vo.setUser_name((String)userlist.get(i).get("user_name"));
				vo.setDep_name(userdao.selectDepNamebyDepPK((int) userlist.get(i).get("dep_ai")));
				vo.setRank_name(userdao.selectRankName((int) userlist.get(i).get("rank_ai")));
				uservos.add(vo);
				System.out.println(uservos.get(i).toString());
			}
			return uservos;
			}else {
				System.out.println("warning no results!!!");
				return null;
			}
		}else if(searchoption.equals("dep")) {
			int dep_ai = linedao.selectDepPKbyName(keyword);
			@SuppressWarnings("rawtypes")
			List<HashMap> userlist = linedao.selectDep(dep_ai);

			if(userlist.size()!=0) {
			for(int i=0;i<userlist.size();i++) {
				UserVo vo = new UserVo(); // arrayList든 Vector든 아이템을 추가하려면 다른 레퍼런스(주소)를 가지는 새로운 객체를 넣어주어야함. 그래서 new 연산자를 사용해야한다
				vo.setUser_ai((int)userlist.get(i).get("user_ai"));
				vo.setDep_ai((int)userlist.get(i).get("dep_ai"));
				vo.setRank_ai((int)userlist.get(i).get("rank_ai"));
				vo.setUser_name((String)userlist.get(i).get("user_name"));
				vo.setDep_name(linedao.selectDepName((int) userlist.get(i).get("dep_ai")));
				vo.setRank_name(linedao.selectRankName((int) userlist.get(i).get("rank_ai")));
				uservos.add(vo);
			}
			return uservos;
			}else {
				System.err.println("warning no results!!!");
				return null;
			}
		}else {
			System.err.println("unavaliable options!!!");
			return null;
		}
	}
	
	public String insertline(LineVo linevo,String viewName) {
		linedao.insertApl(linevo);
		return viewName;
	}
}
